stages:
  - validate

variables:
  VAL_DIR: validation
  VAL_DIR_ABS: ${CI_PROJECT_DIR}/${VAL_DIR}

.run_validation: &run_validation
  - set -e
  - mkdir ${VAL_DIR}
  - cd ${VAL_DIR}
  - echo ${REFERENCEFILE}
  - echo ${INPUTFILE}
  - python ${CI_PROJECT_DIR}/.gitlab/ci_scripts/compare_samples.py ${REFERENCEFILE} ${INPUTFILE}

.restore_environment: &restore_environment
  - set +e
  - source ${CI_PROJECT_DIR}/.gitlab/ci_scripts/setupATLAS.sh
  - echo ${ASETUP_PATH}
  - cd ${CI_PROJECT_DIR}/${ASETUP_PATH}
  - asetup --restore
  - cd ${CI_PROJECT_DIR}
  - echo ${BUILD_PATH}
  - cd ${CI_PROJECT_DIR}/${BUILD_PATH}
  - source */setup.sh
  - cd ${CI_PROJECT_DIR}

validateRun2:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule"'
  stage: validate
  tags:
    - cvmfs
  variables:
    JOBNAME: job_validateRun2
    REFERENCEFILE: ${CI_PROJECT_DIR}/job_referenceRun2/${RUN_DIR}/output_job_referenceRun2.root
    INPUTFILE: ${CI_PROJECT_DIR}/job_latestABreleaseRun2/${RUN_DIR}/output_job_latestABreleaseRun2.root
  script:
    - *restore_environment
    - *run_validation
  needs: [referenceRun2, latestABreleaseRun2, latestABrelease]
  allow_failure: true

validateRun3:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule"'
  stage: validate
  tags:
    - cvmfs
  variables:
    JOBNAME: job_validateRun3
    REFERENCEFILE: ${CI_PROJECT_DIR}/job_referenceRun3/${RUN_DIR}/output_job_referenceRun3.root
    INPUTFILE: ${CI_PROJECT_DIR}/job_latestABreleaseRun3/${RUN_DIR}/output_job_latestABreleaseRun3.root
  script:
    - *restore_environment
    - *run_validation
  needs: [referenceRun3, latestABreleaseRun3, latestABrelease]
  allow_failure: true

validateLastWeekRun2:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  stage: validate
  tags:
    - cvmfs
  variables:
    JOBNAME: job_validateLastWeekRun2
    REFERENCEFILE: ${CI_PROJECT_DIR}/job_lastweekRun2/${RUN_DIR}/output_job_lastweekRun2.root
    INPUTFILE: ${CI_PROJECT_DIR}/job_referenceRun2/${RUN_DIR}/output_job_referenceRun2.root
  script:
    - *restore_environment
    - *run_validation
  needs: [referenceRun2, lastweekRun2, latestABrelease]
  allow_failure: true

validateLastWeekRun3:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  stage: validate
  tags:
    - cvmfs
  variables:
    JOBNAME: job_validateLastWeekRun3
    REFERENCEFILE: ${CI_PROJECT_DIR}/job_lastweekRun3/${RUN_DIR}/output_job_lastweekRun3.root
    INPUTFILE: ${CI_PROJECT_DIR}/job_referenceRun3/${RUN_DIR}/output_job_referenceRun3.root
  script:
    - *restore_environment
    - *run_validation
  needs: [referenceRun3, lastweekRun3, latestABrelease]
  allow_failure: true

validateYAMLRun2:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule"'
  stage: validate
  tags:
    - cvmfs
  variables:
    JOBNAME: job_validateYAMLRun2
    REFERENCEFILE: ${CI_PROJECT_DIR}/job_latestABnightlyRun2/${RUN_DIR}/output_job_latestABnightlyRun2.root
    INPUTFILE: ${CI_PROJECT_DIR}/job_latestABnightlyRun2YAML/${RUN_DIR}/output_job_latestABnightlyRun2YAML.root
  script:
    - *restore_environment
    - *run_validation
  needs: [latestABnightlyRun2, latestABnightlyRun2YAML, latestABnightly]
  allow_failure: true

validateYAMLRun3:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule"'
  stage: validate
  tags:
    - cvmfs
  variables:
    JOBNAME: job_validateYAMLRun3
    REFERENCEFILE: ${CI_PROJECT_DIR}/job_latestABnightlyRun3/${RUN_DIR}/output_job_latestABnightlyRun3.root
    INPUTFILE: ${CI_PROJECT_DIR}/job_latestABnightlyRun3YAML/${RUN_DIR}/output_job_latestABnightlyRun3YAML.root
  script:
    - *restore_environment
    - *run_validation
  needs: [latestABnightlyRun3, latestABnightlyRun3YAML, latestABnightly]
  allow_failure: true